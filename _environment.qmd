```{r env-level2-text}
if (country == "SES RP3") {
  #we need to define this variables to avoid errors
  env_apt_2 <- ''
  env_apt_3 <- ''
  env_apt_4 <- ''
  env_mil_1 <- ''
  env_mil_2 <- ''
  env_mil_4 <- ''
  env_mil_6 <- ''
  env_mil_8 <- ''
  
} else {

  # define ranges and import data
  sheet <- country
  
  if (no_tcz >0) {
  range <- "A2:P80"
  env_apt_all <- read_range(env_apt_file, sheet, range) 
  env_apt_all <- env_apt_all |> 
      rename(a = 1) 
  
  # replace NAs by empty strings
  env_apt_all[is.na(env_apt_all)] <- ""
  
  env_apt_titles <- c("1. Overview",
                  "**1. Overview**",
                  "2. Additional Taxi-Out Time", 
                  "**2. Additional Taxi-Out Time**", 
                  "3. Additional ASMA Time",
                  "**3. Additional ASMA Time**",
                  "4. Share of arrivals applying CDO",
                  "**4. Share of arrivals applying CDO**",
                  "5. Appendix",
                  "**5. Appendix**"
  )
  
  env_apt_heading_positions <- which(env_apt_all$a %in% env_apt_titles)
  
  for (i in 1:length(env_apt_heading_positions)) {
    if (i<length(env_apt_heading_positions)) {
      mytext <- apply(env_apt_all[(env_apt_heading_positions[i]+1):(env_apt_heading_positions[i+1]-1), ], 1, function(col) paste(col, collapse = "<br>"))
    } else{
      mytext <- apply(env_apt_all[(env_apt_heading_positions[i]+1):(env_apt_heading_positions[i]+1), ], 1, function(col) paste(col, collapse = "<br>"))
  
    }
    # replace repeated breaks by single  
    mytext <- gsub("(<br>)+", "<br>", mytext)
  
    #remove empty elements of vector
    mytext <- mytext[mytext != "<br>"]
    mytext <- mytext[mytext != ""]
    
    #replace double breaks by single breaks
    pattern <- "(<br>){2,}"
    mytext <- str_replace_all(mytext, pattern, "<br>")
  
    ### remove leading and trailing line breaks
    mytext <- sub("^<br>|<br>$", "", mytext)
    
    ### assign text to variable
    assign(paste0("env_apt_", i, ""), paste0(mytext,collapse = ""))
  }
  
  
  # # env apt old code based on ranges
  # range <- "A3:P4"
  # env_apt_1 <- read_range(env_apt_file, sheet, range)  
  # 
  # range <- "A5:P7"
  # env_apt_2 <- read_range(env_apt_file, sheet, range) 
  # env_apt_2 <- if_else(is.na(env_apt_2[2,1]) == FALSE, pull(env_apt_2[2,1]), pull(env_apt_2[1,8]))
  # 
  # range <- "A8:P10"
  # env_apt_3 <- read_range(env_apt_file, sheet, range) 
  # env_apt_3 <- if_else(is.na(env_apt_3[2,1]) == FALSE, pull(env_apt_3[2,1]), pull(env_apt_3[1,8]))
  # 
  # range <- "A11:P13"
  # env_apt_4 <- read_range(env_apt_file, sheet, range) 
  # env_apt_4 <- if_else(is.na(env_apt_4[2,1]) == FALSE, pull(env_apt_4[2,1]), pull(env_apt_4[1,8])) 
  # 
  # range <- "A14:P15"
  # env_apt_5 <- read_range(env_apt_file, sheet, range)   
  }
  
  # env mil
  range <- "A2:P80"
  env_mil_all <- read_range(env_mil_file, sheet, range) 
  env_mil_all <- env_mil_all |> 
      rename(a = 1) 
  
  # replace NAs by empty strings
  env_mil_all[is.na(env_mil_all)] <- ""
  
  env_mil_titles <- c("Update on Military dimension of the plan",
                  "**Update on Military dimension of the plan**",
                  "Military - related measures implemented or planned to improve environment and capacity",														
                  "**Military - related measures implemented or planned to improve environment and capacity**",											
                  "Military - related measures implemented or planned to improve capacity", 
                  "**Military - related measures implemented or planned to improve capacity**",
                  "PI#6 Effective use of reserved or segregated airspace - national level",
                  "**PI#6 Effective use of reserved or segregated airspace - national level**",
                  "Initiatives implemented or planned to improve PI#6",
                  "**Initiatives implemented or planned to improve PI#6**",
                  "**PI#7 Rate of planning via available airspace structures - national level**",
                  "PI#7 Rate of planning via available airspace structures - national level",
                  "Initiatives implemented or planned to improve PI#7",
                  "**Initiatives implemented or planned to improve PI#7**",
                  "PI#8 Rate of using available airspace structures - national level",
                  "**PI#8 Rate of using available airspace structures - national level**",
                  "Initiatives implemented or planned to improve PI#8",
                  "**Initiatives implemented or planned to improve PI#8**"
  )
  
  env_mil_heading_positions <- which(env_mil_all$a %in% env_mil_titles)
  
  for (i in 1:length(env_mil_heading_positions)) {
    if (i<length(env_mil_heading_positions)) {
      mytext <- apply(env_mil_all[(env_mil_heading_positions[i]+1):(env_mil_heading_positions[i+1]-1), ], 1, function(col) paste(col, collapse = "<br>"))
    } else{
      mytext <- apply(env_mil_all[(env_mil_heading_positions[i]+1):(env_mil_heading_positions[i]+4), ], 1, function(col) paste(col, collapse = "<br>"))
  
    }
    # replace repeated breaks by single  
    mytext <- gsub("(<br>)+", "<br>", mytext)
  
    #remove empty elements of vector
    mytext <- mytext[mytext != "<br>"]
    mytext <- mytext[mytext != ""]
    
    #replace double breaks by single breaks
    pattern <- "(<br>){2,}"
    mytext <- str_replace_all(mytext, pattern, "<br>")
  
    ### remove leading and trailing line breaks
    mytext <- sub("^<br>|<br>$", "", mytext)
    
    ### assign text to variable
    assign(paste0("env_mil_", i, ""), paste0(mytext,collapse = ""))
  }
  
  # 
  # range <- "A3:O7"
  # env_mil_3 <- read_range(env_mil_file, sheet, range) 
  # 
  # range <- "A8:O12"
  # env_mil_2 <- read_range(env_mil_file, sheet, range) 
  # 
  # range <- "A30:O34"
  # env_mil_5 <- read_range(env_mil_file, sheet, range) 
  # 
  # range <- "A52:O56"
  # env_mil_8 <- read_range(env_mil_file, sheet, range) 
  # 
  # range <- "A74:O78"
  # env_mil_11 <- read_range(env_mil_file, sheet, range) 
}

```
::: {.grid .align-items-center}
:::: {.g-col-9}
[Environment - {{< var doc.country >}}]{.fakeh1}
::::

:::: {.g-col-3}
<span class="no-external-icon">[<i class="fa fa-download"></i> Download Report](`r params$home_address`/download/{{< var doc.year_report >}}/PRB-Annual-Monitoring-Report_{{< var doc.country >}}_{{< var doc.year_report >}}.pdf){.btn .btn-light .text-dark .border .bg-secondary-subtle .rounded}</span>
::::
:::


## PRB monitoring

```{r}
env_conc1 <- get_prb_conclusions("PRB_findings.xlsx", "environment", "Table_Findings_environment")
```

`r env_conc1`


`r if (params$country == "Luxembourg") "::: {.content-hidden}"`
::: {#container-kea}

## En route performance

### Horizontal flight efficiency of the actual trajectory ([**KEA**](`r params$home_address`/about.html#environment---horizontal-flight-efficiency-of-the-actual-trajectory-kea-kpi1-of-the-last-filed-flight-plan-kep-pi1-shortest-constrained-route-scr-pi2)) (KPI#1), of the last filed flight plan ([**KEP**](`r params$home_address`/about.html#environment---horizontal-flight-efficiency-of-the-actual-trajectory-kea-kpi1-of-the-last-filed-flight-plan-kep-pi1-shortest-constrained-route-scr-pi2)) (PI#1) & shortest constrained route ([**SCR**](`r params$home_address`/about.html#environment---horizontal-flight-efficiency-of-the-actual-trajectory-kea-kpi1-of-the-last-filed-flight-plan-kep-pi1-shortest-constrained-route-scr-pi2)) (PI#2)

:::: {layout="[ 50, 50 ]"}

::::: {.chart-container}  
```{r chart-env-kea, options = (doclevel=c("level2"))}
#| file: R/chart_level1_kea.R
#| out.width: "50%"
```
:::::

::::: {.chart-container}  
```{r chart-env-kea-month}
#| file: R/chart_level2_kea_month.R
#| out.width: "50%"
```
:::::

::::

:::: {layout="[ 50, 50 ]"}

::::: {.chart-container}  
```{r chart-env-kep-scr}
#| file: R/chart_level2_kep_scr.R
#| out.width: "100%"
```
:::::

::::: {.chart-container}  
```{r chart-env-kep-scr-month}
#| file: R/chart_level2_kep_scr_month.R
#| out.width: "100%"
```
:::::

::::
:::
`r if (params$country == "Luxembourg") ":::"`


`r if (params$country == "SES RP3") "::: {.content-hidden}"`

`r if (params$no_tcz == 0) "::: {.content-hidden}"`

::: {#container-axot-asma}

## Terminal performance

### Additional taxi-out time ([**AXOT**](`r params$home_address`/about.html#environment---additional-taxi-out-time-axot-pi3-arrival-sequencing-and-metering-area-asma-time-pi4)) (PI#3) & Arrival Sequencing and Metering Area ([**ASMA**](`r params$home_address`/about.html#environment---additional-taxi-out-time-axot-pi3-arrival-sequencing-and-metering-area-asma-time-pi4)) time (PI#4)

:::: {layout="[ 20, 60, 20 ]"}

::::: {#empty-div}
:::::

::::: {.chart-container}  
```{r chart-axot-asma-country}
#| file: R/chart_level2_env_axot_asma_country.R
#| out.width: "100%"
```
:::::
::::

:::: {layout="[ 50, 50 ]"}

::::: {.chart-container}  
```{r chart-axot-apt}
#| file: R/chart_level2_env_axot_apt.R
#| out.width: "100%"
```
:::::

::::: {.chart-container}  
```{r chart-asma-apt}
#| file: R/chart_level2_env_asma_apt.R
#| out.width: "100%"
```
:::::

::::
:::

::: {.callout-note collapse=true}

#### Focus on ASMA & AXOT

**AXOT**

`r if (exists("env_apt_2") == FALSE) {''} else {env_apt_2}`

**ASMA**

`r if (exists("env_apt_3") == FALSE) {''} else {env_apt_3}`

:::

::: {#container-cdo}

### Share of arrivals applying continuous descent operations ([**CDOs**](`r params$home_address`/about.html#environment---share-of-arrivals-applying-continuous-descent-operations-cdos-pi5)) (PI#5)

:::: {layout="[ 50, 50 ]"}

::::: {.chart-container}  
```{r chart-cdo-country}
#| file: R/chart_level2_env_cdo_country.R
#| out.width: "100%"
```
:::::

::::: {.chart-container}  
```{r chart-cdo-apt}
#| file: R/chart_level2_env_cdo_apt.R
#| out.width: "100%"
```
:::::

::::
:::

::: {.callout-note collapse=true}

#### Focus CDOs

`r if (exists("env_apt_4") == FALSE) {''} else {env_apt_4}`

:::

::: {#container-env-apt-pis}

:::: {#table-env-apt-pis}

```{r table-env-apt-pis}
#| file: R/table_level2_env_apt_pis.R
#| out.width: "100%"
```

::::
:::

`r if (params$no_tcz == 0) ":::"`


`r if (params$country == "Luxembourg") "::: {.content-hidden}"`
::: {#container-mil-pi}

## [**Civil-Military dimension**](`r params$home_address`/about.html#civil-military-dimension)  

:::: {layout="[ 20, 60, 20 ]"}

::::: {#empty-div}
:::::

::::: {.chart-container}  
```{r chart-ersa}
#| file: R/chart_level2_env_ersa.R
#| out.width: "100%"
```
:::::
::::

:::: {layout="[ 50, 50 ]"}

::::: {.chart-container}  
```{r chart-cdr}
#| file: R/chart_level2_env_cdr.R
#| out.width: "100%"
```
:::::

::::: {.chart-container}  
```{r chart-rsa}
#| file: R/chart_level2_env_rsa.R
#| out.width: "100%"
```
:::::

::::
:::

::: {.callout-note collapse=true}

#### Focus on Civil-Military dimension

**Update on Military dimension of the plan**

`r env_mil_1`


`r if (params$year_report != 2020) ":::: {.content-hidden}"`

**Military - related measures implemented or planned to improve environment and capacity**														

`r if (params$year_report != 2020) "::::"`

`r if (params$year_report == 2020) ":::: {.content-hidden}"`

**Military - related measures implemented or planned to improve capacity**

`r if (params$year_report == 2020) "::::"`

`r env_mil_2`

**Initiatives implemented or planned to improve PI#6**

`r env_mil_4`

**Initiatives implemented or planned to improve PI#7**

`r env_mil_6`

**Initiatives implemented or planned to improve PI#8**

`r env_mil_8`

:::
`r if (params$country == "Luxembourg") ":::"`
`r if (params$country == "SES RP3") ":::"`


`r if (params$country != "SES RP3") "::: {.content-hidden}"`
### Summary of performance at local level

:::: {layout="[ 20, 60, 20 ]"}

::::: {#empty-div}
:::::

::::: {.chart-container}  
```{r table-kea-summary}
#| file: R/table_env_kea_all_states.R
#| out.width: "100%"
```
:::::

::::: {#empty-div}
:::::

::::

`r if (params$country != "SES RP3") ":::"`
